language: python

#os:
#  - linux
env: MINI_OS="Linux"
     MINI_ARCH="x86_64"
     MINI="Miniconda3"
#  # for packages on https://repo.anaconda.com/miniconda/

#  - osx
#  # for packages on https://repo.anaconda.com/miniconda/
#  env: MINI_OS="MacOSX"
#       MINI_ARCH="x86_64"
  
# not critical of os x fails
# mainly support linux
#jobs:
#  allow_failures:
#    - os: osx

os: "linux"

jobs:
  allow_failures:
    - os: "osx"


python:
  - "3.7"
  # for packages on https://repo.anaconda.com/miniconda/
#  - "3.6"      # current default Python on Travis CI
#
#   - "2.7"
#   env: MINI=Miniconda2
#  - "3.4"
#  - "3.5"
#   - "2.7"
#  - "3.4"
# - "3.5"
# command to install dependencies
# conda from https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/use-conda-with-travis-ci.html

# brew
before_install:
  # /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
  # https://brew.sh/
  # assume brew is already installed
  - if [ "$TRAVIS_OS_NAME" = "osx" ];   then 
      /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"; 
      brew update; 
    fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then 
      sudo apt update; 
    fi
  
install:
  # system requirements defined in apt.txt b ut also works for brew
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then cat apt.txt | xargs sudo apt-get install; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" ] ;  then cat apt.txt | xargs brew install; fi
  
  # download miniconda into $HOME/miniconda
  - wget https://repo.continuum.io/miniconda/${MINI}-latest-${MINI_OS}-${MINI_ARCH}.sh -O miniconda.sh;
  - bash miniconda.sh -b -p $HOME/miniconda
  - source "$HOME/miniconda/etc/profile.d/conda.sh"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a

  # set up: uses information from meta.yaml
  - python setup.py install 
  # Replace dep1 dep2 ... with your dependencies
  # python=$TRAVIS_PYTHON_VERSION
  - conda env create -n uclgeog --file environment.yml
  - conda activate uclgeog
  - conda config --add channels proflewis
 
  # make the uclgeog codebase
  - python setup.py install
  - /bin/bash ./postBuild 
  - pwd
  - cat ${HOME}/.jupyter/jupyter_notebook_config.json
# command to run tests
script:
  # this is in test.yml too ... resolve
  - python -c "import uclgeog"
